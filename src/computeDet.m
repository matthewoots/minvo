function result=computeDet(A)

if(size(A,1)==2)
    
result=A(1,1)*A(2,2)-A(1,2)*A(2,1);
    
elseif(size(A,1)==3)

result=A(1,1)*A(2,2)*A(3,3)  +  A(1,2)*A(2,3)*A(3,1) +  A(2,1)*A(3,2)*A(1,3) +...
             -A(1,3)*A(2,2)*A(3,1) -  A(1,2)*A(2,1)*A(3,3) -  A(1,1)*A(2,3)*A(3,2);

elseif(size(A,1)==4)

a11=A(1,1); a12=A(1,2); a13=A(1,3); a14=A(1,4);
a21=A(2,1); a22=A(2,2); a23=A(2,3); a24=A(2,4);
a31=A(3,1); a32=A(3,2); a33=A(3,3); a34=A(3,4);
a41=A(4,1); a42=A(4,2); a43=A(4,3); a44=A(4,4);

result=a11*a22*a33*a44 - a11*a22*a34*a43 - a11*a23*a32*a44 + a11*a23*a34*a42 + a11*a24*a32*a43 - a11*a24*a33*a42 - a12*a21*a33*a44 + a12*a21*a34*a43 + a12*a23*a31*a44 - a12*a23*a34*a41 - a12*a24*a31*a43 + a12*a24*a33*a41 + a13*a21*a32*a44 - a13*a21*a34*a42 - a13*a22*a31*a44 + a13*a22*a34*a41 + a13*a24*a31*a42 - a13*a24*a32*a41 - a14*a21*a32*a43 + a14*a21*a33*a42 + a14*a22*a31*a43 - a14*a22*a33*a41 - a14*a23*a31*a42 + a14*a23*a32*a41;

elseif(size(A,1)==5)

a11=A(1,1); a12=A(1,2); a13=A(1,3); a14=A(1,4); a15=A(1,5);
a21=A(2,1); a22=A(2,2); a23=A(2,3); a24=A(2,4); a25=A(2,5);
a31=A(3,1); a32=A(3,2); a33=A(3,3); a34=A(3,4); a35=A(3,5);
a41=A(4,1); a42=A(4,2); a43=A(4,3); a44=A(4,4); a45=A(4,5);
a51=A(5,1); a52=A(5,2); a53=A(5,3); a54=A(5,4); a55=A(5,5);   
    
result=a11*a22*a33*a44*a55 - a11*a22*a33*a45*a54 - a11*a22*a34*a43*a55 + a11*a22*a34*a45*a53 + a11*a22*a35*a43*a54 - a11*a22*a35*a44*a53 - a11*a23*a32*a44*a55 + a11*a23*a32*a45*a54 + a11*a23*a34*a42*a55 - a11*a23*a34*a45*a52 - a11*a23*a35*a42*a54 + a11*a23*a35*a44*a52 + a11*a24*a32*a43*a55 - a11*a24*a32*a45*a53 - a11*a24*a33*a42*a55 + a11*a24*a33*a45*a52 + a11*a24*a35*a42*a53 - a11*a24*a35*a43*a52 - a11*a25*a32*a43*a54 + a11*a25*a32*a44*a53 + a11*a25*a33*a42*a54 - a11*a25*a33*a44*a52 - a11*a25*a34*a42*a53 + a11*a25*a34*a43*a52 - a12*a21*a33*a44*a55 + a12*a21*a33*a45*a54 + a12*a21*a34*a43*a55 - a12*a21*a34*a45*a53 - a12*a21*a35*a43*a54 + a12*a21*a35*a44*a53 + a12*a23*a31*a44*a55 - a12*a23*a31*a45*a54 - a12*a23*a34*a41*a55 + a12*a23*a34*a45*a51 + a12*a23*a35*a41*a54 - a12*a23*a35*a44*a51 - a12*a24*a31*a43*a55 + a12*a24*a31*a45*a53 + a12*a24*a33*a41*a55 - a12*a24*a33*a45*a51 - a12*a24*a35*a41*a53 + a12*a24*a35*a43*a51 + a12*a25*a31*a43*a54 - a12*a25*a31*a44*a53 - a12*a25*a33*a41*a54 + a12*a25*a33*a44*a51 + a12*a25*a34*a41*a53 - a12*a25*a34*a43*a51 + a13*a21*a32*a44*a55 - a13*a21*a32*a45*a54 - a13*a21*a34*a42*a55 + a13*a21*a34*a45*a52 + a13*a21*a35*a42*a54 - a13*a21*a35*a44*a52 - a13*a22*a31*a44*a55 + a13*a22*a31*a45*a54 + a13*a22*a34*a41*a55 - a13*a22*a34*a45*a51 - a13*a22*a35*a41*a54 + a13*a22*a35*a44*a51 + a13*a24*a31*a42*a55 - a13*a24*a31*a45*a52 - a13*a24*a32*a41*a55 + a13*a24*a32*a45*a51 + a13*a24*a35*a41*a52 - a13*a24*a35*a42*a51 - a13*a25*a31*a42*a54 + a13*a25*a31*a44*a52 + a13*a25*a32*a41*a54 - a13*a25*a32*a44*a51 - a13*a25*a34*a41*a52 + a13*a25*a34*a42*a51 - a14*a21*a32*a43*a55 + a14*a21*a32*a45*a53 + a14*a21*a33*a42*a55 - a14*a21*a33*a45*a52 - a14*a21*a35*a42*a53 + a14*a21*a35*a43*a52 + a14*a22*a31*a43*a55 - a14*a22*a31*a45*a53 - a14*a22*a33*a41*a55 + a14*a22*a33*a45*a51 + a14*a22*a35*a41*a53 - a14*a22*a35*a43*a51 - a14*a23*a31*a42*a55 + a14*a23*a31*a45*a52 + a14*a23*a32*a41*a55 - a14*a23*a32*a45*a51 - a14*a23*a35*a41*a52 + a14*a23*a35*a42*a51 + a14*a25*a31*a42*a53 - a14*a25*a31*a43*a52 - a14*a25*a32*a41*a53 + a14*a25*a32*a43*a51 + a14*a25*a33*a41*a52 - a14*a25*a33*a42*a51 + a15*a21*a32*a43*a54 - a15*a21*a32*a44*a53 - a15*a21*a33*a42*a54 + a15*a21*a33*a44*a52 + a15*a21*a34*a42*a53 - a15*a21*a34*a43*a52 - a15*a22*a31*a43*a54 + a15*a22*a31*a44*a53 + a15*a22*a33*a41*a54 - a15*a22*a33*a44*a51 - a15*a22*a34*a41*a53 + a15*a22*a34*a43*a51 + a15*a23*a31*a42*a54 - a15*a23*a31*a44*a52 - a15*a23*a32*a41*a54 + a15*a23*a32*a44*a51 + a15*a23*a34*a41*a52 - a15*a23*a34*a42*a51 - a15*a24*a31*a42*a53 + a15*a24*a31*a43*a52 + a15*a24*a32*a41*a53 - a15*a24*a32*a43*a51 - a15*a24*a33*a41*a52 + a15*a24*a33*a42*a51;

    

else
   error("Not implemented yet!") 
end
end